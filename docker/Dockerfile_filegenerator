# Use an official CUDA base image from the NVIDIA repository
FROM nvidia/cuda:12.3.2-devel-ubuntu22.04

# Install Python and other necessary dependencies
RUN apt-get update && apt-get install -y \
    python3.9 \
    python3-pip \
    python3-setuptools \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Set the default Python version to 3.10
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1

# Set the working directory in the container
WORKDIR /app

# Copy the current directory contents into the container at /app
COPY . .

# Install Python packages
RUN pip install --upgrade pip
RUN pip install --no-cache-dir -r requirements.txt

EXPOSE 8000

# Naming Format:
# saving_name: (model)_(augmentation)_(dates)
# (model): resnet_small, resnet_all, ....; (augmentation): "aug", "noaug"; (dates):yymmdd
# used in:
# 1. configs: configs_(saving_name).yaml
# 2. saving: (saving_name)_(cls/contrastive)_(epoch).pth.tar

# 1: done in Edna; 03/09 18:30; saved in outputs_0905 (old ver: 0904)
#CMD ["sh", "-c", "python ./src/main.py --save_name resnet18_small_aug_240902 --classifier"]

# 2: compare to 1.
#CMD ["sh", "-c", "python ./src/main.py --save_name resnet18_small_noaug_240906 --classifier"]

#CMD ["sh", "-c", "python ./src/datasets/dataloader/kitti_odom_dataloader/utils/create_perturbation_csv.py"]
CMD ["sh", "-c", "python ./src/datasets/dataloader/kitti_dataloader/utils/create_eigen_files.py"]


# 3: check init
# Try other initialization for small

# 4: train larger model -> compare 1 & 2: which better
# CMD ["sh", "-c", "python ./src/main.py --save_name resnet_all_240904 --config configs_resnet18_all_.yaml --classifier"]

# 5: Train ViT


# CUDA_VISIBLE_DEVICES=0 for 2 cudas

#&& python ./inference/eval/precision_recall/main.py --model_1 image_240708_full_1 --model_2 lidar_240708_full_1 --name_cls cls_240708_full_1
